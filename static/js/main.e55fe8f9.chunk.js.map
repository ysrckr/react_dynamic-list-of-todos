{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","isSelected","todoId","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","changeSort","changeQuery","query","onChange","event","target","value","placeholder","style","pointerEvents","Loader","TodoModal","onClose","useState","user","setUser","getUser","userId","a","axios","get","userFromServer","data","useEffect","href","email","name","App","setTodos","sort","setSort","selectedTodo","setSelectedTodo","setQuery","loadTodos","response","sortTodos","useCallback","todosToSort","cleanQuery","trim","toLowerCase","filter","includes","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e55fe8f9.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport type { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelect: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => {\n  const isSelected = (todoId: number) => todoId === selectedTodoId;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={`todo__${todo.id}`}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                data-id={todo.id}\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': !isSelected(todo.id),\n                    'fa-eye-slash': isSelected(todo.id),\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import type { ChangeEvent, FC } from 'react';\nimport type { TodoFilterStatus } from '../../App';\n\ntype Props = {\n  changeSort: (filter: TodoFilterStatus) => void;\n  changeQuery: (query: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  changeSort,\n  changeQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event: ChangeEvent<HTMLSelectElement>) => {\n            changeSort(event.target.value as TodoFilterStatus);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n          changeQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              changeQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport type { User } from '../../types/User';\nimport type { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const getUser = async (userId: number) => {\n    try {\n      const userFromServer = await axios.get<User>(\n        `https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/${userId}.json`,\n      );\n\n      setUser(userFromServer.data);\n    } catch (error: unknown) {\n      setUser(null);\n    }\n  };\n\n  useEffect(() => {\n    getUser(todo.userId);\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport axios from 'axios';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport type { Todo } from './types/Todo';\n\nexport type TodoFilterStatus = 'all' | 'active' | 'completed';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [sort, setSort] = useState<TodoFilterStatus>('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodo(todos.find((todo) => todo.id === todoId) || null);\n  };\n\n  const closeModal = () => {\n    setSelectedTodo(null);\n  };\n\n  const loadTodos = async () => {\n    try {\n      const response = await axios.get<Todo[]>(\n        'https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json',\n      );\n\n      setTodos(response.data);\n    } catch (error: unknown) {\n      setTodos([]);\n    }\n  };\n\n  const sortTodos = useCallback(\n    (todosToSort: Todo[]) => {\n      const cleanQuery = query.trim().toLowerCase();\n\n      switch (sort) {\n        case 'active':\n          return todosToSort\n            .filter((todo) => !todo.completed\n              && todo.title\n                .toLowerCase()\n                .includes(cleanQuery));\n\n        case 'completed':\n          return todosToSort\n            .filter((todo) => todo.completed\n              && todo.title\n                .toLowerCase()\n                .includes(cleanQuery));\n\n        default:\n          return todosToSort\n            .filter((todo) => todo.title.toLowerCase().includes(cleanQuery));\n      }\n    },\n    [sort, query],\n  );\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeSort={setSort}\n                changeQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length ? (\n                <TodoList\n                  todos={sortTodos(todos)}\n                  selectedTodoId={selectedTodo?.id || 0}\n                  onSelect={selectTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} onClose={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}